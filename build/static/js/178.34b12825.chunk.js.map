{"version":3,"file":"static/js/178.34b12825.chunk.js","mappings":"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","sources":["APIRequest/UsersAPI.js","Components/User/Login.jsx"],"sourcesContent":["import {setToken, setUserDetails} from \"../Helper/SessionHelper\";\r\nimport store from \"../Redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../Redux/state-slice/settings-slice\";\r\nimport axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../Helper/FromHelper\";\r\nimport {BaseURL} from \"../Helper/config\";\r\n\r\n\r\nexport async function RegistrationRequest(email,name,password){\r\n    try {\r\n        store.dispatch(ShowLoader());\r\n        let URL = BaseURL + \"/register\";\r\n        let PostBody={email:email,name:name,password:password}\r\n        let res = await axios.post(URL,PostBody)\r\n        store.dispatch(HideLoader())\r\n        if (res.status===200){\r\n            if (res.data['status']===\"fail\"){\r\n                if (res.data['data']['keyPattern']['email']===1){\r\n                    ErrorToast(\"Email Already Exist\");\r\n                    return false;\r\n                }else {\r\n                    ErrorToast(\"Something Went Wrong\")\r\n                    return false;\r\n                }\r\n            }else {\r\n                SuccessToast(\"Registration Success\");\r\n                return true;\r\n            }\r\n        }else {\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }catch (e) {\r\n        store.dispatch(HideLoader());\r\n        ErrorToast(\"Something Went Wrong\");\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nexport async function LoginRequest(email,password){\r\n    try {\r\n        store.dispatch(ShowLoader());\r\n        let URL = BaseURL+\"/login\";\r\n        let PostBody = {\"email\":email, \"password\":password};\r\n        let res = await axios.post(URL,PostBody);\r\n        debugger\r\n        setToken(res.data['token']);\r\n        debugger\r\n        setUserDetails(res.data['data']);\r\n        SuccessToast(\"Login Success\");\r\n        store.dispatch(HideLoader());\r\n        return true;\r\n    }catch (e) {\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"Invalid Email or Password\")\r\n        return false;\r\n    }\r\n}","import React, {Fragment, useRef} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {ErrorToast, IsEmail, IsEmpty} from \"../../Helper/FromHelper\";\r\nimport {LoginRequest} from \"../../APIRequest/UsersAPI\";\r\n\r\nconst Login = () => {\r\n\r\n    let passRef, emailRef = useRef();\r\n\r\n    const SubmitLogin = async ()=>{\r\n        let email = emailRef.value;\r\n        let password = passRef.value;\r\n        if (IsEmail(email)){\r\n            ErrorToast(\"Invalid Email Address\")\r\n        }else if(IsEmpty(password)){\r\n            ErrorToast(\"Password Required\")\r\n        }else {\r\n            debugger;\r\n            let result = await LoginRequest(email,password)\r\n            debugger;\r\n            if (result){\r\n                window.location.href=\"/\"\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-7 col-lg-6 center-screen\">\r\n                        <div className=\"card w-90  p-4\">\r\n                            <div className=\"card-body\">\r\n                                <h3>SIGN IN</h3>\r\n                                <br/>\r\n                                <input ref={(input)=>emailRef=input} placeholder=\"User Email\" className=\"form-control\" type=\"email\"/>\r\n                                <br/>\r\n                                <input ref={(input)=>passRef=input} placeholder=\"User Password\" className=\"form-control\" type=\"password\"/>\r\n                                <br/>\r\n                                <button onClick={SubmitLogin}  className=\"btn btn-success w-100 animated \">Next</button>\r\n                                <div className=\"float-none mt-3\">\r\n                                    <span>\r\n                                        <Link className=\"text-center ms-3 h6\" to=\"/Registration\">Sign Up</Link>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Login;"],"names":["RegistrationRequest","_x","_x2","_x3","_RegistrationRequest","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","name","password","URL","PostBody","res","wrap","_context","prev","next","store","dispatch","ShowLoader","BaseURL","axios","post","sent","HideLoader","status","data","ErrorToast","abrupt","SuccessToast","t0","stop","LoginRequest","_x4","_x5","_LoginRequest","_callee2","_context2","setToken","setUserDetails","passRef","emailRef","useRef","SubmitLogin","_ref","value","IsEmail","IsEmpty","window","location","href","_jsx","Fragment","children","className","_jsxs","ref","input","placeholder","type","onClick","Link","to"],"sourceRoot":""}